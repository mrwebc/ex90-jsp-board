▣ 프론트컨트롤러 개발방식 예제 
    - 클라이언트의 모든 요청을 하나의 컨트롤러를 통해 얻어낸 후 알맞은 서브 컨트롤러를 호출하여 비지니스 로직을 실행후 데이터를 각각의 JSP 파일에 전송하는 방식

▣ 구멍가게코딩단의 스프링웹프로젝트(구판)의 내용을 JSP에 맞게 리뉴얼한 버전

▣ 다이나믹 웹프로젝트 -> 메이븐 프로젝트 전환 => ★★★★★ex83-front 프로젝트에서 conf, ctrl 패키지 복붙★★★★★

    pom.xml에서 
        mysql-connector-j
        mybatis 3.5.7 버전 모듈 설치
        jstl
        lombok  
        modelmapper
        
        jUnit   
        log4j   
 
▣ log4j 설정 관련 파일
    1. mybatis-config.xml
    
          <!-- 로그4제이 세팅 -->
          <settings>
            <setting name="logImpl" value="LOG4J2"/>
          </settings>
          
          <mapper resource="com/study/jsp/mapper/TimeMapper.xml"/>
          
    2. resources > log4j2.xml
    
    3. pom.xml
        
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.22.1</version>
        </dependency>

    4. MyBatisConnectionTest 테스트  
      
      
▣ main 하위에 resources 폴더 생성후 Build Path > "Use as Source Folder" 메뉴를 선택하면 소스폴더로 사용 가능하다.
    >myBatis>mapper 패키지 생성후 관련 파일을 이동하면 조금더 스프링과 유사한 구조로 개발할 수 있다.
      
      
      
      
      
        